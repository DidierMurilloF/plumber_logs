log_info('{req$REMOTE_ADDR} "{req$HTTP_USER_AGENT}" {req$HTTP_HOST} {req$REQUEST_METHOD} {req$PATH_INFO} {res$status}')
logs <- readr::read_log(file = "logs/plumber_f886907787c.log",
                col_names = c("log_level",
                              "timestamp", 
                              "remote_addr", 
                              "user_agent",
                              "host",
                              "method",
                              "endpoint",
                              "status",
                              "execution_time"))

logs[logs$method == "POST",]

# Config
config <- config::get()

# logging
library(logger)
# Ensure glue is a specific dependency so it's avaible for logger
library(glue)

# Specify how logs are written 
if (!fs::dir_exists(config$log_dir)) fs::dir_create(config$log_dir)
log_appender(appender_tee(tempfile("plumber_", config$log_dir, ".log")))

convert_empty <- function(string) {
  if (string == "") {
    "-"
  } else {
    string
  }
}

pr <- plumb("plumber.R")

pr$registerHooks(
  list(
    preroute = function() {
      # Start timer for log info
      tictoc::tic()
    },
    postroute = function(req, res) {
      end <- tictoc::toc(quiet = TRUE)
      # Log details about the request and the response
      # TODO: Sanitize log details - perhaps in convert_empty
      log_info('{convert_empty(req$REMOTE_ADDR)} "{convert_empty(req$HTTP_USER_AGENT)}" {convert_empty(req$HTTP_HOST)} {convert_empty(req$REQUEST_METHOD)} {convert_empty(req$PATH_INFO)} {convert_empty(res$status)} {round(end$toc - end$tic, digits = 5)}')
    }
  )
)

